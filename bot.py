import requests
from telegram import Bot
from telegram.ext import ApplicationBuilder, ContextTypes
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from datetime import datetime, timedelta
import pytz

# –í–∞—à —Ç–æ–∫–µ–Ω –∏ chat_id
TOKEN = '7912815635:AAGdKqihiMsKEe8VSNBL-3OUw70iwQs7CVY'
CHAT_ID = '-1002644568185'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
bot = Bot(token=TOKEN)
app = ApplicationBuilder().token(TOKEN).build()
scheduler = AsyncIOScheduler()

# –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –ú–°–ö
moscow_tz = pytz.timezone('Europe/Moscow')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤
def get_warface_tournaments():
    url = 'https://pvp.vkplay.ru/api/tournaments?game=warface&status=active'
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()
    return []

# –ó–∞–¥–∞—á–∞: –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–ø–∏—Å–∫–∞ —Ç—É—Ä–Ω–∏—Ä–æ–≤ –≤ 13:00 –ú–°–ö
async def send_daily_tournaments():
    tournaments = get_warface_tournaments()
    if tournaments:
        message = "üéÆ –ê–∫—Ç–∏–≤–Ω—ã–µ —Ç—É—Ä–Ω–∏—Ä—ã –ø–æ Warface:\n\n"
        for t in tournaments:
            message += f"üèÜ {t['title']}\nüîó {t['url']}\n\n"
        await bot.send_message(chat_id=CHAT_ID, text=message)
    else:
        await bot.send_message(chat_id=CHAT_ID, text="–°–µ–≥–æ–¥–Ω—è –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç—É—Ä–Ω–∏—Ä–æ–≤ –ø–æ Warface.")

# –ó–∞–¥–∞—á–∞: –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ –∑–∞ —á–∞—Å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
async def notify_before_registration_end():
    tournaments = get_warface_tournaments()
    now = datetime.now(pytz.utc)
    for t in tournaments:
        reg_end = datetime.fromisoformat(t['registration_end_time']).astimezone(pytz.utc)
        if timedelta(hours=0) < reg_end - now <= timedelta(hours=1):
            message = f"‚è∞ –û—Å—Ç–∞–ª—Å—è 1 —á–∞—Å –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ —Ç—É—Ä–Ω–∏—Ä:\nüèÜ {t['title']}\nüîó {t['url']}"
            await bot.send_message(chat_id=CHAT_ID, text=message)

# –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á
scheduler.add_job(send_daily_tournaments, 'cron', hour=13, minute=0, timezone=moscow_tz)
scheduler.add_job(notify_before_registration_end, 'interval', minutes=30)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
async def main():
    scheduler.start()
    await app.initialize()
    await app.start()
    await app.updater.start_polling()
    await app.updater.idle()

import asyncio
asyncio.run(main())